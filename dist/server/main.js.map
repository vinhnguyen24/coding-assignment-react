{"version":3,"file":"main.js","mappings":"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","sources":["webpack://nrwl-coding-assignment/./server/src/app/app.module.ts","webpack://nrwl-coding-assignment/./server/src/tickets/tickets.controller.ts","webpack://nrwl-coding-assignment/./server/src/tickets/tickets.module.ts","webpack://nrwl-coding-assignment/./server/src/tickets/tickets.service.ts","webpack://nrwl-coding-assignment/./server/src/users/users.controller.ts","webpack://nrwl-coding-assignment/./server/src/users/users.module.ts","webpack://nrwl-coding-assignment/./server/src/users/users.service.ts","webpack://nrwl-coding-assignment/./server/src/utils/random-delay.ts","webpack://nrwl-coding-assignment/external commonjs \"@nestjs/common\"","webpack://nrwl-coding-assignment/external commonjs \"@nestjs/core\"","webpack://nrwl-coding-assignment/external commonjs \"tslib\"","webpack://nrwl-coding-assignment/webpack/bootstrap","webpack://nrwl-coding-assignment/./server/src/main.ts"],"sourcesContent":["import { Module } from '@nestjs/common';\n\nimport { UsersModule } from '../users/users.module';\nimport { TicketsModule } from '../tickets/tickets.module';\n\n@Module({\n  imports: [UsersModule, TicketsModule],\n})\nexport class AppModule {}\n","import {\n  NotFoundException,\n  UnprocessableEntityException,\n  Controller,\n  Get,\n  Put,\n  Post,\n  Param,\n  Delete,\n  Body,\n  HttpCode,\n} from '@nestjs/common';\nimport { randomDelay } from '../utils/random-delay';\nimport { TicketsService } from './tickets.service';\n\n@Controller('tickets')\nexport class TicketsController {\n  constructor(private ticketsService: TicketsService) {}\n\n  @Get()\n  async getTickets() {\n    await randomDelay();\n    return this.ticketsService.tickets();\n  }\n\n  @Get(':id')\n  async getTicket(@Param('id') id: string) {\n    await randomDelay();\n    const ticket = await this.ticketsService.ticket(Number(id));\n    if (ticket) return ticket;\n    throw new NotFoundException();\n  }\n\n  @Post()\n  async createTicket(@Body() createDto: { description: string }) {\n    await randomDelay();\n    return this.ticketsService.newTicket(createDto);\n  }\n\n  @Put(':ticketId/assign/:userId')\n  @HttpCode(204)\n  async assignTicket(\n    @Param('ticketId') ticketId: string,\n    @Param('userId') userId: string\n  ) {\n    await randomDelay();\n    const success = await this.ticketsService.assign(\n      Number(ticketId),\n      Number(userId)\n    );\n    if (!success) throw new UnprocessableEntityException();\n  }\n\n  @Put(':ticketId/unassign')\n  @HttpCode(204)\n  async unassignTicket(@Param('ticketId') ticketId: string) {\n    await randomDelay();\n    const success = await this.ticketsService.unassign(Number(ticketId));\n    if (!success) throw new UnprocessableEntityException();\n  }\n\n  @Put(':id/complete')\n  @HttpCode(204)\n  async markAsComplete(@Param('id') ticketId: string) {\n    await randomDelay();\n    const success = await this.ticketsService.complete(Number(ticketId), true);\n    if (!success) throw new UnprocessableEntityException();\n  }\n\n  @Delete(':id/complete')\n  @HttpCode(204)\n  async markAsIncomplete(@Param('id') ticketId: string) {\n    await randomDelay();\n    const success = await this.ticketsService.complete(Number(ticketId), false);\n    if (!success) throw new UnprocessableEntityException();\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { TicketsService } from './tickets.service';\nimport { UsersModule } from '../users/users.module';\nimport { TicketsController } from './tickets.controller';\n\n@Module({\n  imports: [UsersModule],\n  controllers: [TicketsController],\n  providers: [TicketsService],\n})\nexport class TicketsModule {}\n","import { Injectable } from '@nestjs/common';\nimport { Ticket } from '@acme/shared-models';\nimport { UsersService } from '../users/users.service';\n\n@Injectable()\nexport class TicketsService {\n  /*\n   * In-memory storage so data is lost on server restart.\n   */\n  private storedTickets: Ticket[] = [\n    {\n      id: 1,\n      description: 'Install a monitor arm',\n      assigneeId: 1,\n      completed: false,\n    },\n    {\n      id: 2,\n      description: 'Move the desk to the new location',\n      assigneeId: 1,\n      completed: false,\n    },\n  ];\n\n  private nextId = 3;\n\n  constructor(private usersService: UsersService) {}\n\n  async tickets(): Promise<Ticket[]> {\n    return this.storedTickets;\n  }\n\n  async ticket(id: number): Promise<Ticket | null> {\n    return this.storedTickets.find((t) => t.id === id) ?? null;\n  }\n\n  async newTicket(payload: { description: string }): Promise<Ticket> {\n    const newTicket: Ticket = {\n      id: this.nextId++,\n      description: payload.description,\n      assigneeId: null,\n      completed: false,\n    };\n\n    this.storedTickets.push(newTicket);\n\n    return newTicket;\n  }\n\n  async assign(ticketId: number, userId: number): Promise<boolean> {\n    const ticket = await this.ticket(ticketId);\n    const user = await this.usersService.user(userId);\n\n    if (ticket && user) {\n      ticket.assigneeId = +userId;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  async unassign(ticketId: number): Promise<boolean> {\n    const ticket = await this.ticket(ticketId);\n    if (ticket) {\n      ticket.assigneeId = null;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  async complete(ticketId: number, completed: boolean): Promise<boolean> {\n    const ticket = await this.ticket(ticketId);\n    if (ticket) {\n      ticket.completed = completed;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n","import { Controller, Get, Param, NotFoundException } from '@nestjs/common';\nimport { randomDelay } from '../utils/random-delay';\nimport { UsersService } from './users.service';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private usersService: UsersService) {}\n\n  @Get()\n  async getUsers() {\n    return this.usersService.users();\n  }\n\n  @Get(':id')\n  async getUser(@Param('id') id: string) {\n    await randomDelay();\n    const user = await this.usersService.user(Number(id));\n    if (user) return user;\n    throw new NotFoundException();\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\n\n@Module({\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n","import { Injectable } from '@nestjs/common';\nimport { User } from '@acme/shared-models';\n\n@Injectable()\nexport class UsersService {\n  /*\n   * In-memory storage so data is lost on server restart.\n   */\n  private storedUsers: User[] = [\n    { id: 1, name: 'Alice' },\n    { id: 2, name: 'Bob' },\n    { id: 3, name: 'Chris' },\n    { id: 4, name: 'Daisy' },\n    { id: 5, name: 'Ed' },\n  ];\n\n  async users(): Promise<User[]> {\n    return this.storedUsers;\n  }\n\n  async user(id: number): Promise<User | null> {\n    return this.storedUsers.find((user) => user.id === +id) ?? null;\n  }\n}\n","export function randomDelay(maxDelay = 1000): Promise<void> {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve();\n    }, Math.random() * maxDelay);\n  });\n}\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"tslib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.PORT || 3333;\n  await app.listen(port);\n  Logger.log(`🚀 Application is running on: http://localhost:${port}/${globalPrefix}`);\n}\n\nbootstrap();\n"],"names":["AppModule","Module","imports","UsersModule","TicketsModule","TicketsController","constructor","ticketsService","getTickets","randomDelay","this","tickets","getTicket","id","ticket","Number","NotFoundException","createTicket","createDto","newTicket","assignTicket","ticketId","userId","assign","UnprocessableEntityException","unassignTicket","unassign","markAsComplete","complete","markAsIncomplete","Get","Param","Post","Body","Put","HttpCode","Delete","Controller","TicketsService","controllers","providers","usersService","storedTickets","description","assigneeId","completed","nextId","find","t","payload","push","user","Injectable","UsersService","UsersController","getUsers","users","getUser","exports","storedUsers","name","maxDelay","Promise","resolve","setTimeout","Math","random","module","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","app","NestFactory","create","setGlobalPrefix","port","process","env","PORT","listen","Logger","log","bootstrap"],"sourceRoot":""}